# Copyright 2023 Teak.io, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

description: >
  Run terraform apply, using a planfile from a prior terrafrom plan.

docker:
  - image: cimg/base:stable

parameters:
  version:
    description: "Version of terraform to use"
    type: string
    default: "1.10.5"

  platform:
    description: "Platform terraform will run on"
    type: string
    default: "linux_amd64"

  github_releases_user:
    type: string
    default: ""
    description: >
      If set, instead of downloading from releases.hashicorp.com, will
      download from a Github release for the specified user

  gpg_key_id:
    type: string
    default: "72D7468F"
    description: The fingerprint of the GPG key used to sign the release.

  gpg_keyserver:
    type: string
    default: "keyserver.ubuntu.com"
    description: "The keyserver to retrieve the GPG key from"

  path:
    type: "string"
    description: "Path to the terraform module"
    default: "."

  workspace:
    type: "string"
    description: Name of the terraform workspace
    default: ""

  plan:
    type: string
    default: "teak-orb-terraform.tfplan"
    description: "The name of the planfile to apply."

  plan_path:
    type: string
    description: "Path the planfile is stored in. Should be persisted from a terraform-plan job or command."
    default: "/tmp/teak-orb-terraform"

  out_log:
    type: string
    default: "teak-orb-terraform.apply.log"
    description: "Name of the file the apply log should be stored in."

  dry_run:
    type: boolean
    default: false
    description: "When true will show what apply would have done, but will not run apply."

  continuation_cache:
    type: "string"
    description: "The cache key the plan was stored in for continuations (https://circleci.com/developer/orbs/orb/circleci/continuation)"
    default: ""

  use_circle_workspace:
    type: boolean
    default: true
    description: "Use plan_path as a circleci workspace."

  before_apply_steps:
    type: steps
    description: "Steps to execute prior to running terraform apply, but after terraform init."
    default: []

  cache_version:
    type: "string"
    description: "Change me to blow away caches"
    default: "v2"

steps:
  - checkout
  - aws-cli/install
  - aws-oidc-assume
  - terraform-install:
      version: << parameters.version >>
      platform: << parameters.platform >>
      github_releases_user: << parameters.github_releases_user >>
      gpg_key_id: << parameters.gpg_key_id >>
      gpg_keyserver: << parameters.gpg_keyserver >>
  - terraform-init:
      path: << parameters.path >>
      cache_version: << parameters.cache_version >>
  - terraform-apply:
      plan: << parameters.plan >>
      out_log: << parameters.out_log >>
      plan_path: << parameters.plan_path >>
      workspace: << parameters.workspace >>
      path: << parameters.path >>
      dry_run: << parameters.dry_run >>
      continuation_cache: << parameters.continuation_cache >>
      use_circle_workspace: << parameters.use_circle_workspace >>
      before_apply_steps: << parameters.before_apply_steps >>
